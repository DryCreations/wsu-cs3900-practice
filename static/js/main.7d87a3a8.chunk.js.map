{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","App_Game","Component","Square","_this","this","className","onClick","props","value","Column","i","_this2","App_Square","squares","handleClick","renderSquare","Board","_this3","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","c","r","j","push","state","xIsNext","turn","winner","slice","k","length","setState","checkWin","counter","p","_this4","App_Column","status","renderColumn","Game","App_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d87a3a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Game />\r\n    );\r\n  }\r\n}\r\n\r\nclass Square extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"square\"\r\n        onClick={() => this.props.onClick()}\r\n      >\r\n        {this.props.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Column extends Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[this.props.value][i]}\r\n        onClick={() => {this.props.handleClick(this.props.value, i)}}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"column\">\r\n        {this.renderSquare(5)}\r\n        {this.renderSquare(4)}\r\n        {this.renderSquare(3)}\r\n        {this.renderSquare(2)}\r\n        {this.renderSquare(1)}\r\n        {this.renderSquare(0)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var c = [];\r\n    for(var i = 0; i < 7; i++) {\r\n      var r = [];\r\n      for(var j = 0; j < 6; j++) {\r\n        r.push(null);\r\n      }\r\n      c.push(r);\r\n    }\r\n\r\n    this.state = {\r\n      squares: c,\r\n      xIsNext: true,\r\n      turn: 0,\r\n      winner: 'C',\r\n    };\r\n\r\n\r\n  }\r\n\r\n  handleClick(i, j) {\r\n    if (this.state.winner === 'C') {\r\n      const squares = this.state.squares.slice();\r\n      for(var k = 0; squares[i][k] != null; k++);\r\n\r\n      if (k < squares[i].length) {\r\n\r\n        squares[i][k] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState ({xIsNext: !this.state.xIsNext,\r\n                        turn: this.state.turn + 1,\r\n                        squares: squares,\r\n                        winner: this.checkWin(i, k),\r\n                      });\r\n      }\r\n    }\r\n  }\r\n\r\n  checkWin(i, j) {\r\n    var counter, k, p;\r\n\r\n    //vertical match\r\n    counter = 1;\r\n    for(k = j - 1; k >= 0 && this.state.squares[i][j] === this.state.squares[i][k]; k--, counter++);\r\n    for(k = j + 1; k < this.state.squares[i].length && this.state.squares[i][j] === this.state.squares[i][k]; k++, counter++);\r\n\r\n    if (counter >= 4) return this.state.squares[i][j];\r\n\r\n\r\n    //horizontal match\r\n    counter = 1;\r\n    for(k = i - 1; k >= 0 && this.state.squares[i][j] === this.state.squares[k][j]; k--, counter++);\r\n    for(k = i + 1; k < this.state.squares.length && this.state.squares[i][j] === this.state.squares[k][j]; k++, counter++);\r\n\r\n    if (counter >= 4) return this.state.squares[i][j];\r\n\r\n\r\n    //diagonal / match\r\n\r\n    counter = 1;\r\n    for(k = j + 1, p = i + 1; k < this.state.squares[i].length && p < this.state.squares.length && this.state.squares[i][j] === this.state.squares[p][k]; k++, p++, counter++);\r\n    for(k = j - 1, p = i - 1; k >= 0  && p >= 0 && this.state.squares[i][j] === this.state.squares[p][k]; k--, p--, counter++);\r\n\r\n    if (counter >= 4) return this.state.squares[i][j];\r\n\r\n\r\n    //diagonal \\ match\r\n\r\n    counter = 1;\r\n    for(k = j + 1, p = i - 1; k < this.state.squares[i].length && p >= 0 && this.state.squares[i][j] === this.state.squares[p][k]; k++, p--, counter++);\r\n    for(k = j - 1, p = i + 1; k >= 0  && p < this.state.squares.length && this.state.squares[i][j] === this.state.squares[p][k]; k--, p++, counter++);\r\n\r\n    if (counter >= 4) return this.state.squares[i][j];\r\n\r\n    if(this.state.turn === 41) return 'T';\r\n\r\n    return 'C';\r\n  }\r\n\r\n  renderColumn(i) {\r\n    return(\r\n      <Column\r\n        value={i}\r\n        squares={this.state.squares}\r\n        handleClick={(i, j) => this.handleClick(i, j)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    var status;\r\n    if (this.state.winner === 'C') {\r\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    } else if (this.state.winner === 'T') {\r\n      status = 'Tie!';\r\n    } else {\r\n      status = this.state.winner + ' Wins!';\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"status\">\r\n          {status}\r\n        </div>\r\n        <div className=\"board\">\r\n          {this.renderColumn(0)}\r\n          {this.renderColumn(1)}\r\n          {this.renderColumn(2)}\r\n          {this.renderColumn(3)}\r\n          {this.renderColumn(4)}\r\n          {this.renderColumn(5)}\r\n          {this.renderColumn(6)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <Board />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}